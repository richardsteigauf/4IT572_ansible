- name: Deploy to EC2
  hosts: localhost
  connection: local
  vars_files:
    - 4IT572_ansible/ansible/group_vars/all/aws.yml  # Include your vault file here

  tasks:
    - name: Launch EC2 instance
      ec2_instance:
        instance_type: t2.large
        image_id: ami-0759f51a90924c166
        region: us-east-1
        key_name: devopss
        vpc_subnet_id: subnet-0117b4f9fcf59e9cd
        network:
            assign_public_ip: yes
        wait: yes
        count: 1
        security_group: eshop
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        security_token: "{{ session_token }}"
      register: ec2_instance_result

    - name: Add instance host to group
      add_host:
        hostname: "{{ item.network_interfaces[0].association.public_ip }}"
        groupname: launched
      loop: "{{ ec2_instance_result.instances }}"
      when: "'association' in item.network_interfaces[0] and item.network_interfaces[0].association.public_ip is defined"

    - name: Wait for SSH connection
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 30
        timeout: 300
      loop: "{{ ec2_instance_result.instances }}"

- name: Configure  EC2
  hosts: launched
  connection: ssh


  tasks:
    - name: Install Git and Docker
      yum:
        name:
          - docker
          - git
        state: latest
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Start Docker on startup
      shell: systemctl enable docker
      become: yes
    - name: Set rights to docker
      shell: usermod -a -G docker ec2-user
      become: yes
    - name: Get project files from git
      git:
        repo: 'https://github.com/richardsteigauf/4IT572_docker.git'
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port:
          80
